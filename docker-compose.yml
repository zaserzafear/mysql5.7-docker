services:
  proxysql:
    image: proxysql/proxysql
    container_name: mysql57.proxysql
    restart: always
    ports:
      - "6033:6033" # MySQL port
      - "6032:6032" # Admin interface
    depends_on:
      mysql-master:
        condition: service_healthy
      mysql-slave1:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "nc -z 127.0.0.1 6033"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - ./proxysql.cnf:/etc/proxysql.cnf
    networks:
      - mysql_net

  mysql-master:
    build:
      context: .
      dockerfile: Dockerfile.mysql57
    hostname: mysql-master
    container_name: mysql57.master
    restart: always
    secrets:
      - mysql_root_password
      - mysql_repl_password
    environment:
      TZ: ${TZ}
      MYSQL_ROOT_PASSWORD_FILE: /run/secrets/mysql_root_password

      LOGROTATE_DAYS: 90
      LOGROTATE_CRON: "0 0 * * *"

      SERVER_MODE: master
      SERVER_ID: 1
      MYSQL_REPLICAS_DB: db1,db2,db3
    ports:
      - "3306:3306"
    volumes:
      - mysql_data_master:/var/lib/mysql
      - mysql_logs_master:/var/log/mysql
      - ./sql_script:/sql_script
    networks:
      - mysql_net
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "mysqladmin -uroot -p$(cat /run/secrets/mysql_root_password) ping -h 127.0.0.1",
        ]
      interval: 10s
      timeout: 5s
      retries: 5

  mysql-slave1:
    build:
      context: .
      dockerfile: Dockerfile.mysql57
    container_name: mysql57.slave1
    restart: always
    depends_on:
      mysql-master:
        condition: service_healthy
    secrets:
      - mysql_root_password
      - mysql_repl_password
    environment:
      TZ: ${TZ}
      MYSQL_ROOT_PASSWORD_FILE: /run/secrets/mysql_root_password

      LOGROTATE_DAYS: 90
      LOGROTATE_CRON: "0 0 * * *"

      SERVER_MODE: slave
      SERVER_ID: 2
      MYSQL_REPLICAS_DB: db1,db2,db3
    ports:
      - "3307:3306"
    volumes:
      - mysql_data_slave1:/var/lib/mysql
      - mysql_logs_slave1:/var/log/mysql
    networks:
      - mysql_net
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "mysqladmin -uroot -p$(cat /run/secrets/mysql_root_password) ping -h 127.0.0.1",
        ]
      interval: 10s
      timeout: 5s
      retries: 5

  mysql-backup:
    build:
      context: .
      dockerfile: Dockerfile.mysqlbackup
    container_name: mysql57.backup
    restart: always
    depends_on:
      mysql-slave1:
        condition: service_healthy
    secrets:
      - mysql_root_password
    environment:
      TZ: ${TZ}
      MYSQL_BACKUP_HOST: mysql-slave1
      MYSQL_BACKUP_DB: "db1 db2 db3"
      CRON_SCHEDULE: "0 0 * * *"
    volumes:
      - ./backup-replicas.sh:/scripts/backup-replicas.sh
      - ./mysql_backups:/backups
    networks:
      - mysql_net
    entrypoint: >
      sh -c "
        chmod +x /scripts/backup-replicas.sh && \
        echo \"$${CRON_SCHEDULE:-0 0 * * *} /scripts/backup-replicas.sh >> /backups/backup.log 2>&1\" > /etc/crontabs/root && \
        crond -f -l 2
      "

secrets:
  mysql_root_password:
    file: ./secrets/mysql_root_password.txt
  mysql_repl_password:
    file: ./secrets/mysql_repl_password.txt

volumes:
  mysql_data_master:
  mysql_logs_master:
  mysql_data_slave1:
  mysql_logs_slave1:
networks:
  mysql_net:
